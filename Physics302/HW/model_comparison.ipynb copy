{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model Comparison and Occam’s Razor\n",
    "\n",
    "“Among competing hypotheses, the one with the fewest assumptions should be selected.”\n",
    "\n",
    "Though not always, often “fewest assumptions” is equated with fewest number of model\n",
    "parameters."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A) Simulation\n",
    "\n",
    "Suppose the true nature of a signal is sinusoidal. You can then simulate measurement data that\n",
    "fluctuate around\n",
    "\n",
    "$$ytrue= \\sin(kx+ φ) $$\n",
    "\n",
    "Assume the measurement signal-to-noise ratio is 5:1. To be realistic, let’s also add an “error\n",
    "floor” of 0.1. For our purpose this is necessary because yTrue can be very close to zero. Without\n",
    "an error floor, this can lead to very small values for the uncertainty and, being in the denominator\n",
    "in the sum for χ2, this can cause numerical instability. Adding the error floor prevents the\n",
    "variance to become arbitrarily small. Thus there are two sources of uncertainty: the\n",
    "measurement error (see the signal-to-noise ratio above) and the error floor. Let’s call the former\n",
    "meas_err and the later err_floor. The total variance is the sum of the square of these two\n",
    "quantities:\n",
    "\n",
    "$$measerr**2 + errfloor**2 $$\n",
    "\n",
    "Physicists call this “addition in quadrature”. The total uncertainty (or total error) is the square\n",
    "root of this quantity.\n",
    "For these simulated measurements, use 101 evenly-spaced points for x between 0 and 2π, with k\n",
    "= 2 and φ = π/6.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "# All imports\n",
    "from random import choice\n",
    "import numpy as np\n",
    "import scipy.optimize as sp\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "N = 101\n",
    "k = 2\n",
    "phi = np.pi/6  #0.5235\n",
    "x = np.linspace(0, 2*np.pi, N)\n",
    "\n",
    "measerr = 1/5\n",
    "floorerr = 0.1\n",
    "totalerr=np.sqrt((measerr**2) + (floorerr**2)) #0.2236\n",
    "#sig = y_true * measerr\n",
    "\n",
    "def sinusoid(x, k, phi):\n",
    "    return np.sin((k*x) + phi)\n",
    "\n",
    "\n",
    "#print(x)\n",
    "y_true= sinusoid(x, k, phi) #+ y_model\n",
    "#print(y_true)\n",
    "\n",
    "plt.plot(x, y_true, label='Original Curve')\n",
    "plt.xlabel('x')\n",
    "plt.ylabel('y_true')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best-fit polynomial coefficients:\n",
      "\n",
      "chi2, chi2_nu, DOF are 113.2366, 1.1324100.0000 respectively.\n"
     ]
    }
   ],
   "source": [
    "plt.rcParams['figure.figsize'] = [8, 6]\n",
    "\n",
    "#higher terms have smaller coeficients to be weighted and not have unbalanced if it is within -1 and 1, x upper bound is 2pi which is bigger to 1, this is why we want to make sure the coefficient of x^8 is smaller then coefficient x^2\n",
    "# c0 = 0\n",
    "# c1 = 1\n",
    "# c2 = 0\n",
    "# c3 = -1/6\n",
    "# c4 = 0\n",
    "# c5 = 1/120\n",
    "# c6 =0\n",
    "# c7 = -1/5040\n",
    "# c8 = 0\n",
    "# y_model = c0 + c1*(x**1) + c2*(x**2) + c3*(x**3) + c4*(x**4) + c5*(x**5) + c6*(x**6) + c7*(x**7) + c8*(x**8)\n",
    "y = sinusoid(x, k, phi) #+ y_model\n",
    "x_data = x\n",
    "y_noise = totalerr * np.random.normal(size=x_data.size)\n",
    "y_data = y + y_noise\n",
    "\n",
    "# print(y)\n",
    "\n",
    "plt.scatter(x_data, y_data, marker='x')\n",
    "plt.errorbar(x_data, y_data, yerr = totalerr, fmt = 'ob', ms = 1, capsize = 3)\n",
    "\n",
    "params, _ = sp.curve_fit(sinusoid, x_data, y_data, maxfev=1000)\n",
    "# print(params, _)\n",
    "# print(params[0], params[1])\n",
    "\n",
    "plt.plot(x_data, sinusoid(x_data, params[1], params[0]), label='Best-fit Curve')\n",
    "plt.xlabel('x')\n",
    "plt.ylabel('y')\n",
    "plt.legend()\n",
    "plt.show()\n",
    "\n",
    "chi2 = ((y_data - y)**2/totalerr**2).sum()\n",
    "N = len(y_true)\n",
    "n=2\n",
    "# # n = number of fitting parameters, if chi2 around 1, then n=1\n",
    "n = 1\n",
    "DOF = N - n\n",
    "chi2_nu = chi2/DOF\n",
    "#do reduced chi2 for 2 models, make sure they both gives you close to 1\n",
    "\n",
    "#Program output:\n",
    "np.set_printoptions(formatter={'float': '{:.3f}'.format})\n",
    "print(\"Best-fit polynomial coefficients:\")\n",
    "#array with proper formatting\n",
    "print()\n",
    "print(\"chi2, chi2_nu, DOF are {:.4f}\".format(chi2)+\", {:.4f}\".format(chi2_nu) + \"{:.4f}\".format(DOF) +\" respectively.\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "operands could not be broadcast together with shapes (101,) (9,) ",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-13-33c5e5e70313>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# for _ in c:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m#     y_model[_] = c * (x**c)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0my_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0my_fun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m<ipython-input-13-33c5e5e70313>\u001b[0m in \u001b[0;36my_fun\u001b[0;34m(c)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0my_fun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mc\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlinspace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m8\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m9\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# y_model = c\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# for _ in c:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: operands could not be broadcast together with shapes (101,) (9,) "
     ]
    }
   ],
   "source": [
    "# def y_fun(c):\n",
    "#     return c * (x**c)\n",
    "c = np.linspace(0, 8, 9)\n",
    "y_model = 0\n",
    "for _ in c:\n",
    "    y_model += c * (x**c)\n",
    "#y_model = y_fun(c)\n",
    "\n",
    "y_model = c0\n",
    "#reduced chi2 should be closed to 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "params, _ = sp.curve_fit(sinusoid, x, y_true)\n",
    "#initial guesses\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.12709601707687707 2.7395618795435057\n",
      "[[0.001 -0.005]\n",
      " [-0.005 0.019]]\n",
      "2\n"
     ]
    },
    {
     "ename": "TypeError",
     "evalue": "'int' object is not iterable",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-80-04521fac4fa1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpopt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0my_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 19\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     20\u001b[0m     \u001b[0my_model\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpopt\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: 'int' object is not iterable"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#fitting parameters {ci}\n",
    "# find the best fit k and phi\n",
    "def f(x, k, phi):\n",
    "    #return m * x + b\n",
    "    #return a*np.exp(-b*x**2)\n",
    "    return np.sin((k*x) + phi)\n",
    "    \n",
    "# ydata = f(x, N) + eps\n",
    "#y=f(x, )\n",
    "popt, pcov = sp.curve_fit(sinu)\n",
    "print(*popt)\n",
    "#popt are optimal values\n",
    "print(pcov)\n",
    "\n",
    "plt.plot(x, f(x, *popt))\n",
    "#reduced chi2\n",
    "print(popt.size)\n",
    "y_model = x\n",
    "for i in x.size:  \n",
    "    y_model[i] = popt*(x**i)\n",
    "    \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "B) Alternative Model Fitting\n",
    "\n",
    "Once the data have been simulated, let’s pretend to forget everything about the simulation\n",
    "process and instead imagine that someone has just handed us a set of measurement results, stored\n",
    "in a numpy array y.\n",
    "\n",
    "First, suppose you guess (in this case correctly) that the underlying signal is sinusoidal and\n",
    "construct such a model. You can then used scipy.optimize.curve_fit to find the bestfit\n",
    "k and φ, along with the variance associated with each fitting parameter.\n",
    "However, you may wonder whether one can fit more than one model to the data. For example,\n",
    "you know that a polynomial of a high order can also “wiggle” up and down, and you would like\n",
    "to see if such a model can fit the data well, with a reduced χ2 around 1. Suppose you decide to\n",
    "try an 8th order polynomial:\n",
    "\n",
    "$$ ymodel=c0 + c1x + c2x2 + c3x3 + c4x4 + c5x5 + c6x6 + c7x7 + c8x8 $$\n",
    "\n",
    "For this model, obviously, the {ci} are the fitting parameters. Use\n",
    "scipy.optimize.curve_fit to determine the best-fit {ci}. Also find the reduced χ2.\n",
    "You should also plot the data, with error bars, along with the the best-fit polynomial."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "minRSS=100\n",
    "#currentRSS=0\n",
    "def f(x, k, phi):\n",
    "    #return m * x + b\n",
    "    #return a*np.exp(-b*x**2)\n",
    "    return np.sin((k*x) + phi)\n",
    "\n",
    "for a in np.arange(0, 10, 0.1):\n",
    "    for b in np.arange(0, 100, 0.1):\n",
    "        y_model=f(a, b, x)\n",
    "        currentRSS=((y-y_model)**2).sum()\n",
    "        if (currentRSS < minRSS):\n",
    "            minRSS=currentRSS\n",
    "            bestm=a\n",
    "            bestb=b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best-fit polynomial coefficients:\n",
      "[1.013 1.137]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "\n",
    "#Program output:\n",
    "np.set_printoptions(formatter={'float': '{:.3f}'.format})\n",
    "print(\"Best-fit polynomial coefficients:\")\n",
    "#array with proper formatting\n",
    "print(popt)\n",
    "# print(\"chi2, chi2_nu, DOF are {:.4f}\".format(chi2)+\", {:.4f}\".format(chi2_nu) + \"{:.0f}\".format(DOF) +\"respectively.\")\n",
    "\n",
    "plt.errorbar(x, y_true, yerr=sig, fmt='.', label='error bars',  ms=6, capsize=3)\n",
    "plt.plot(x, f(k_best, phi_best, x), 'k-')\n",
    "plt.xlabel('x')\n",
    "plt.ylabel('y_true')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
